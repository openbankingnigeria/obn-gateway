version: "3.9"

x-kong-config: &kong-env
  KONG_DATABASE: ${KONG_DATABASE:-postgres}
  KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
  KONG_PG_USER: ${KONG_PG_USER:-kong}
  KONG_PG_PASSWORD_FILE: /run/secrets/kong_postgres_password
  KONG_ADMIN_ACCESS_LOG: /dev/stdout
  KONG_ADMIN_ERROR_LOG: /dev/stderr
  KONG_PROXY_ACCESS_LOG: /dev/stdout
  KONG_PROXY_ERROR_LOG: /dev/stderr
  KONG_PREFIX: ${KONG_PREFIX:-/var/run/kong}
  KONG_UNTRUSTED_LUA_SANDBOX_REQUIRES: cjson.safe
  KONG_ADMIN_LISTEN: "0.0.0.0:8001 reuseport backlog=16384, 0.0.0.0:8444 http2 ssl reuseport backlog=16384"
  KONG_PLUGINS: "bundled,obn-authorization,obn-request-validator"
  KONG_SSL_CERT: ${KONG_SSL_CERT}
  KONG_SSL_CERT_KEY: ${KONG_SSL_CERT_KEY}
  KONG_TRUSTED_IPS: ${KONG_TRUSTED_IPS}

services:
  kong-db:
    image: postgres:9.5-alpine
    # increase max connections
    command: -c 'max_connections=100'
    environment:
      POSTGRES_DB: ${KONG_PG_DATABASE:-kong}
      POSTGRES_USER: ${KONG_PG_USER:-kong}
      POSTGRES_PASSWORD_FILE: /run/secrets/kong_postgres_password
    secrets:
      - kong_postgres_password
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${KONG_PG_USER:-kong}" ]
      interval: 1s
      timeout: 5s
      retries: 30
    restart: on-failure
    stdin_open: true
    tty: true
    networks:
      - kong-net

  kong-migrations:
    image: "${KONG_DOCKER_TAG:-kong:3.5.0}"
    command:
      [
        "/bin/sh",
        "-c",
        "find /usr/local/share/lua/5.1/kong -type d -name 'plugins' -prune -o -type f -exec sed -i 's/X-Kong-/X-/g' {} + && find /usr/local/share/lua/5.1/kong -type d -name 'plugins' -prune -o -type f -exec sed -i 's/x-kong-request-id/x-request-id/g' {} + && /docker-entrypoint.sh kong migrations bootstrap"
      ] #replace x-kong- headers with x-
    environment:
      <<: *kong-env
    secrets:
      - kong_postgres_password
    networks:
      - kong-net
    restart: on-failure
    volumes:
      - kong_prefix_vol:${KONG_PREFIX:-/var/run/kong}
      - kong_tmp_vol:/tmp
      - ./config/certs/kong:/opt/kong

  kong-migrations-up:
    image: "${KONG_DOCKER_TAG:-kong:3.5.0}"
    command:
      [
        "/bin/sh",
        "-c",
        "find /usr/local/share/lua/5.1/kong -type d -name 'plugins' -prune -o -type f -exec sed -i 's/X-Kong-/X-/g' {} + && find /usr/local/share/lua/5.1/kong -type d -name 'plugins' -prune -o -type f -exec sed -i 's/x-kong-request-id/x-request-id/g' {} + && /docker-entrypoint.sh kong migrations up && /docker-entrypoint.sh kong migrations finish"
      ] #replace x-kong- headers with x-
    environment:
      <<: *kong-env
    secrets:
      - kong_postgres_password
    networks:
      - kong-net
    restart: on-failure
    volumes:
      - kong_prefix_vol:${KONG_PREFIX:-/var/run/kong}
      - kong_tmp_vol:/tmp
      - ./config/certs/kong:/opt/kong

  kong:
    image: "${KONG_DOCKER_TAG:-kong:3.5.0}"
    user: "${KONG_USER:-kong}"
    environment:
      <<: *kong-env
    secrets:
      - kong_postgres_password
    command:
      [
        "/bin/sh",
        "-c",
        "find /usr/local/share/lua/5.1/kong -type d -name 'plugins' -prune -o -type f -exec sed -i 's/X-Kong-/X-/g' {} + && find /usr/local/share/lua/5.1/kong -type d -name 'plugins' -prune -o -type f -exec sed -i 's/x-kong-request-id/x-request-id/g' {} + && /docker-entrypoint.sh kong docker-start"
      ] #replace x-kong- headers with x-
    networks:
      - kong-net
      - elastic-net

    healthcheck:
      test: [ "CMD", "kong", "health" ]
      interval: 1s
      timeout: 5s
      retries: 30
    restart: on-failure:5
    volumes:
      - kong_prefix_vol:${KONG_PREFIX:-/var/run/kong}
      - kong_tmp_vol:/tmp
      - ./config/certs/kong:/opt/kong
      - ./apps/kong/plugins/obn-authorization:/usr/local/share/lua/5.1/kong/plugins/obn-authorization
      - ./apps/kong/plugins/obn-request-validator:/usr/local/share/lua/5.1/kong/plugins/obn-request-validator
    security_opt:
      - no-new-privileges
